<?xml version="1.0" encoding="UTF-8"?>

<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:functx="http://www.functx.com"
	       xmlns="http://www.w3.org/1999/xhtml"
	       xmlns:h="http://www.w3.org/1999/xhtml"
               stylesheet="../htmlbook.xsl">

  <x:param name="book-language" select="'en'"/>
  
  <!-- Use the following global label-generation params for testing of h1-h6 processing in the
       heading-processing section below -->
  <x:param name="label.numeration.by.data-type">
appendix:A
chapter:1
part:I
sect1:1
sect2:1
sect3:1
sect4:1
sect5:1
  </x:param>

  <!-- Test suite for elements.xsl -->

  <!-- id generation tests -->
  <x:scenario label="When encountering a section without an id">
    <x:context>
      <section/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Add an id" test="h:section[1]/@id != ''"/>
  </x:scenario>

  <x:scenario label="When encountering a section with an id">
    <x:context>
      <section id="cookies"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Preserve the id" test="h:section[1]/@id = 'cookies'"/>
  </x:scenario>

  <x:scenario label="When encountering a Part div without an id">
    <x:context>
      <div data-type="part"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Add an id" test="h:div[@data-type='part'][1]/@id != ''"/>
  </x:scenario>

  <x:scenario label="When encountering a Part div with an id">
    <x:context>
      <div data-type="part" id="pizza"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Preserve the id" test="h:div[@data-type='part'][1]/@id = 'pizza'"/>
  </x:scenario>

  <x:scenario label="When encountering an aside without an id">
    <x:context>
      <aside/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Add an id" test="h:aside[1]/@id != ''"/>
  </x:scenario>

  <x:scenario label="When encountering an aside with an id">
    <x:context>
      <aside id="watermelon"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Preserve the id" test="h:aside[1]/@id = 'watermelon'"/>
  </x:scenario>

  <!-- Indexterm tests -->
  <x:scenario label="When encountering an indexterm without an id">
    <x:context>
      <a data-type="indexterm" data-primary="rubygems"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Add an id" test="h:a[@data-type='indexterm'][1]/@id != ''"/>
  </x:scenario>

  <x:scenario label="When encountering an indexterm with an id">
    <x:context>
      <a data-type="indexterm" data-primary="rubygems" id="avocado"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Preserve the id" test="h:a[@data-type='indexterm'][1]/@id = 'avocado'"/>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains only whitespace">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and">   </a>
    </x:context>
    <x:expect label="Strip the whitespace">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."/>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains only whitespace (including nbsp)">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and">&#xa0; &#xa0;</a>
    </x:context>
    <x:expect label="Strip the whitespace">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."/>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains text and whitespace">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and">Unicode&#xa0; &#xa0;is fun</a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="...">Unicode&#xa0; &#xa0;is fun</a>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains child nodes only">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and"><em>Unicode</em></a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."><em>Unicode</em></a>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains child nodes only (2)">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and"><br/></a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."><br/></a>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains child nodes and text">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and"><em>123</em>456</a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."><em>123</em>456</a>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains child nodes, text, and whitespace">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and"><em>Unicode</em>&#xa0; &#xa0;is fun</a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."><em>Unicode</em>&#xa0; &#xa0;is fun</a>
    </x:expect>
  </x:scenario>

  <!-- PDF bookmark attributes -->
  <x:scenario label="When encountering a chapter-level section">
    <x:context>
      <section data-type="chapter">
	<h1>This is the Chapter title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When encountering a chapter-level section with heading in a header element">
    <x:context>
      <section data-type="chapter">
	<header>
	  <h1>This is the Chapter title</h1>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When a chapter-level section already has a PDF bookmark">
    <x:context>
      <section data-type="chapter" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Chapter title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect1-level section">
    <x:context>
      <section data-type="sect1">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect1-level section with heading in a header element">
    <x:context>
      <section data-type="sect1">
	<header>
	  <h1>This is the Section title</h1>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When a sect1-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect1" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect2-level section">
    <x:context>
      <section data-type="sect2">
	<h2>This is the Section title</h2>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h2)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect2-level section with heading in a header element">
    <x:context>
      <section data-type="sect2">
	<header>
	  <h2>This is the Section title</h2>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h2)])"/>
  </x:scenario>

  <x:scenario label="When a sect2-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect2" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect3-level section">
    <x:context>
      <section data-type="sect3">
	<h3>This is the Section title</h3>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h3)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect3-level section with heading in a header element">
    <x:context>
      <section data-type="sect3">
	<header>
	  <h3>This is the Section title</h3>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h3)])"/>
  </x:scenario>

  <x:scenario label="When a sect3-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect3" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect4-level section">
    <x:context>
      <section data-type="sect4">
	<h4>This is the Section title</h4>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h4)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect4-level section with heading in a header element">
    <x:context>
      <section data-type="sect4">
	<header>
	  <h4>This is the Section title</h4>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h4)])"/>
  </x:scenario>

  <x:scenario label="When a sect4-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect4" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect5-level section">
    <x:context>
      <section data-type="sect5">
	<h5>This is the Section title</h5>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h5)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect5-level section with heading in a header element">
    <x:context>
      <section data-type="sect5">
	<header>
	  <h5>This is the Section title</h5>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h5)])"/>
  </x:scenario>

  <x:scenario label="When a sect5-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect5" data-pdf-bookmark="Custom Bookmark">
	<header>
	  <h5>This is the Section title</h5>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a Part div">
    <x:context>
      <div data-type="part">
	<h1>This is the Part title</h1>
	<p>Hello World!</p>
      </div>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:div[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When a Part already has a PDF bookmark">
    <x:context>
      <div data-type="part" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Part title</h1>
	<p>Hello World!</p>
      </div>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:div/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a headingless section/div"> <!-- Not valid HTMLBook -->
    <x:context>
      <div data-type="part">
	<p>Hello World!</p>
	<section data-type="chapter">
	  <p>Hi again, World!</p>
	</section>
      </div>
    </x:context>
    <!-- check the result -->
    <x:expect label="Don't generate a data-pdf-bookmark attribute" test="count(//@data-pdf-bookmark) = 0"/>
  </x:scenario>

  <!-- HEADING PROCESSING TESTS -->

  <!-- Part -->
  <x:scenario label="When encountering a heading element (h1-h5) in a Part (loose h1)">
    <x:context select="(//h:h1)[1]">
      <div data-type="part">
	<h1>This is the heading</h1>
	<p>Text Text Text!</p>
      </div>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h1><span class="label">Part I. </span>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h1>This is the heading</h1>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a Part (header block)">
    <x:context select="(//h:h1)[1]">
      <div data-type="part">
	<header>
	  <h1>This is the heading</h1>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </div>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h1><span class="label">Part I. </span>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h1>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Top-level (chapter) -->
  <x:scenario label="When encountering a heading element (h1-h5) in a top level-section (loose h1)">
    <x:context select="(//h:h1)[1]">
      <section data-type="chapter">
	<h1>This is the heading</h1>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h1><span class="label">Chapter 1. </span>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h1>This is the heading</h1>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a top level-section (header block)">
    <x:context select="(//h:h1)[1]">
      <section data-type="chapter">
	<header>
	  <h1>This is the heading</h1>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h1><span class="label">Chapter 1. </span>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h1>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Sect2 -->

  <x:scenario label="When encountering a heading element (h1-h5) in a sect2 (loose h2)">
    <x:context select="(//h:h2)[1]">
      <section data-type="sect2">
	<h2>This is the heading</h2>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h2><span class="label">Section 1. </span>This is the heading</h2>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h2>This is the heading</h2>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a sect2 (header block)">
    <x:context select="(//h:h2)[1]">
      <section data-type="sect2">
	<header>
	  <h2>This is the heading</h2>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h2><span class="label">Section 1. </span>This is the heading</h2>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h2>This is the heading</h2>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Sect3 -->
  <x:scenario label="When encountering a heading element (h1-h5) in a sect3 (loose h3)">
    <x:context select="(//h:h3)[1]">
      <section data-type="sect3">
	<h3>This is the heading</h3>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h3><span class="label">Section 1. </span>This is the heading</h3>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h3>This is the heading</h3>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a sect3 (header block)">
    <x:context select="(//h:h3)[1]">
      <section data-type="sect3">
	<header>
	  <h3>This is the heading</h3>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h3><span class="label">Section 1. </span>This is the heading</h3>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h3>This is the heading</h3>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Sect4 -->
  <x:scenario label="When encountering a heading element (h1-h5) in a sect4 (loose h4)">
    <x:context select="(//h:h4)[1]">
      <section data-type="sect4">
	<h4>This is the heading</h4>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h4><span class="label">Section 1. </span>This is the heading</h4>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h4>This is the heading</h4>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a sect4 (header block)">
    <x:context select="(//h:h4)[1]">
      <section data-type="sect4">
	<header>
	  <h4>This is the heading</h4>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h4><span class="label">Section 1. </span>This is the heading</h4>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h4>This is the heading</h4>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Sect5 -->
  <x:scenario label="When encountering a heading element (h1-h5) in a sect5 (loose h5)">
    <x:context select="(//h:h5)[1]">
      <section data-type="sect5">
	<h5>This is the heading</h5>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h5><span class="label">Section 1. </span>This is the heading</h5>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h5>This is the heading</h5>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a sect5 (header block)">
    <x:context select="(//h:h5)[1]">
      <section data-type="sect5">
	<header>
	  <h5>This is the heading</h5>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h5><span class="label">Section 1. </span>This is the heading</h5>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h5>This is the heading</h5>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- headings in divs -->
  <x:scenario label="When encountering a heading element (h1-h5) in a div">
    <x:context select="(//h:h5)[1]">
      <section data-type="chapter">
	<h1>Chapter heading</h1>
	<div data-type="example">
	  <h5>This is the example heading</h5>
	  <pre data-type="programlisting">print "I'm an awesome Python coder"</pre>
	</div>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h5><span class="label">Example 1-1. </span>This is the example heading</h5>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h5>This is the example heading</h5>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <!-- Admonition tests (heading handling) -->
  <x:scenario label="When matching an titleless admonition (note)">
    <x:context>
      <div data-type="note">
        <p>This is a note.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="note">
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="note">
          <h6>Note</h6>
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario pending="No clean way to parameterize language at template level for unit tests yet" label="With add.title.heading.for.admonitions turned on (es language localization)">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="note">
          <h6>Nota</h6>
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
    
    <x:scenario label="When matching an titleless admonition (tip)">
      <x:context>
        <div data-type="tip">
          <p>This is a tip.</p>
        </div>
      </x:context>
      <x:scenario label="With add.title.heading.for.admonitions turned off">
        <x:context>
          <x:param name="add.title.heading.for.admonitions" select="0"/>
        </x:context>
        <x:expect label="No admonition heading should be added">
          <div data-type="tip">
            <p>This is a tip.</p>
          </div>
        </x:expect>
      </x:scenario>
      
      <x:scenario label="With add.title.heading.for.admonitions turned on">
        <x:context>
          <x:param name="add.title.heading.for.admonitions" select="1"/>
        </x:context>
        <x:expect label="An admonition heading should be added">
          <div data-type="tip">
            <h6>Tip</h6>
            <p>This is a tip.</p>
          </div>
        </x:expect>
      </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titleless admonition (warning)">
    <x:context>
      <div data-type="warning">
        <p>This is a warning.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="warning">
          <p>This is a warning.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="warning">
          <h6>Warning</h6>
          <p>This is a warning.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titleless admonition (caution)">
    <x:context>
      <div data-type="caution">
        <p>This is a caution.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="caution">
          <p>This is a caution.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="caution">
          <h6>Caution</h6>
          <p>This is a caution.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titleless admonition (important)">
    <x:context>
      <div data-type="important">
        <p>This is an important admonition.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="important">
          <p>This is an important admonition.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="important">
          <h6>Important</h6>
          <p>This is an important admonition.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titled admonition (note)">
    <x:context>
      <div data-type="note">
        <h6>Note Heading</h6>
        <p>This is a note.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No additional admonition heading should be added">
        <div data-type="note">
          <h6>Note Heading</h6>
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="note">
          <h6>Note Heading</h6>
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titled admonition (tip)">
    <x:context>
      <div data-type="tip">
        <h6>Tip Heading</h6>
        <p>This is a tip.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="tip">
          <h6>Tip Heading</h6>
          <p>This is a tip.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="tip">
          <h6>Tip Heading</h6>
          <p>This is a tip.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titled admonition (warning)">
    <x:context>
      <div data-type="warning">
        <h6>Warning Heading</h6>
        <p>This is a warning.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="warning">
          <h6>Warning Heading</h6>
          <p>This is a warning.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="warning">
          <h6>Warning Heading</h6>
          <p>This is a warning.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titled admonition (caution)">
    <x:context>
      <div data-type="caution">
        <h6>Caution Heading</h6>
        <p>This is a caution.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="caution">
          <h6>Caution Heading</h6>
          <p>This is a caution.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="caution">
          <h6>Caution Heading</h6>
          <p>This is a caution.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titleless admonition (important)">
    <x:context>
      <div data-type="important">
        <h6>Important Heading</h6>
        <p>This is an important admonition.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="important">
          <h6>Important Heading</h6>
          <p>This is an important admonition.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="important">
          <h6>Important Heading</h6>
          <p>This is an important admonition.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- HTML4 structural elements test -->
  <x:scenario label="When matching any 'section'">
    <x:context>
      <section data-type="chapter" id="chapterid">
	<h1>Chapter heading</h1>
	<p>This happens to be a chapter</p>
      </section>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<section data-type="chapter" id="chapterid" data-pdf-bookmark="...">
	  <h1>Chapter heading</h1>
	  <p>This happens to be a chapter</p>
	</section>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="An additional div for backward compatibility should be added, and id should be moved to div">
	<section data-type="chapter" data-pdf-bookmark="...">
	  <div class="chapter" id="chapterid">...</div>
	</section>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any Index 'section'">
    <x:context>
      <section data-type="index" id="indexid">
	<h1>Index heading</h1>
	<p>There should hopefully be some index entries to follow</p>
      </section>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<section data-type="index" id="indexid">
	  <h1>Index heading</h1>
	  <p>There should hopefully be some index entries to follow</p>
	</section>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="An additional div for backward compatibility should be added, and id should be moved to div">
	<section data-type="index">
	  <div class="index" id="indexid">...</div>
	</section>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any captioned 'figure'">
    <x:context>
      <figure id="figureid">
	<figcaption>Figure heading</figcaption>
	<img src="taco.png"/>
      </figure>
    </x:context>

    <x:scenario label="With figure.border.div disabled">
      <x:context>
	<x:param name="figure.border.div" select="0"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>

    <x:scenario label="With figure.border.div enabled">
      <x:context>
	<x:param name="figure.border.div" select="1"/>
      </x:context>
      <x:expect label="A border-box div should be generated">
	<figure id="figureid">
	  <figcaption>Figure heading</figcaption>
	  <div class="border-box">
	    <img src="taco.png"/>
	  </div>
	</figure>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any uncaptioned 'figure' (no figcaption)">
    <x:context>
      <figure id="figureid">
	<img src="pizza.png"/>
      </figure>
    </x:context>

    <x:scenario label="With figure.border.div disabled">
      <x:context>
	<x:param name="figure.border.div" select="0"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>

    <x:scenario label="With figure.border.div enabled">
      <x:context>
	<x:param name="figure.border.div" select="1"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any uncaptioned 'figure' (empty figcaption)">
    <x:context>
      <figure id="figureid">
	<figcaption/>
	<img src="knish.png"/>
      </figure>
    </x:context>

    <x:scenario label="With figure.border.div disabled">
      <x:context>
	<x:param name="figure.border.div" select="0"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>

    <x:scenario label="With figure.border.div enabled">
      <x:context>
	<x:param name="figure.border.div" select="1"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any 'figure'">
    <x:context>
      <figure id="figureid">
	<figcaption>Figure heading</figcaption>
	<img src="burrito.png"/>
      </figure>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<figure id="figureid">
	  <figcaption>Figure heading</figcaption>
	  <img src="burrito.png"/>
	</figure>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="An additional div for backward compatibility should be added, and id should be moved to div">
	<figure>
	  <div class="figure" id="figureid">...</div>
	</figure>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any 'aside'">
    <x:context>
      <aside data-type="sidebar" id="sidebarid">
	<h5>Sidebar heading</h5>
	<p>This happens to be a sidebar</p>
      </aside>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<aside data-type="sidebar" id="sidebarid">
	  <h5>Sidebar heading</h5>
	  <p>This happens to be a sidebar</p>
	</aside>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="An additional div for backward compatibility should be added, and id should be moved to div">
	<aside data-type="sidebar">
	  <div class="sidebar" id="sidebarid">...</div>
	</aside>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any 'figcaption'">
    <x:context>
      <figcaption>Figure heading</figcaption>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<figcaption>Figure heading</figcaption>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="Caption should be converted to h6">
	<h6>Figure heading</h6>
      </x:expect>
    </x:scenario>
  </x:scenario>

</x:description>
